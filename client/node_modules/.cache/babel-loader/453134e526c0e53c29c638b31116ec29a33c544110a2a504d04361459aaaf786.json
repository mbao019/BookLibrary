{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\VS-Work\\\\mern\\\\client\\\\src\\\\components\\\\bookList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Book = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.book.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 4\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.book.author\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 4\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.book.date\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 4\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.book.genre\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 4\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-link\",\n      to: `/edit/${props.book._id}`,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 6\n    }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link\",\n      onClick: () => {\n        props.deleteBook(props.book._id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 4\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 2\n}, this);\n_c = Book;\nexport default function BookList() {\n  _s();\n  const [books, setBooks] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getBooks() {\n      const response = await fetch(`http://localhost:3000/book`);\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const books = await response.json();\n      console.log(books);\n      const orderedBook = [...books].sort((a, b) => a.title - a.date);\n      console.log(orderedBook);\n      setBooks(books);\n    }\n    getBooks();\n    return;\n  }, [books.length]);\n\n  // This method will delete a record\n  async function deleteBook(id) {\n    await fetch(`http://localhost:3000/${id}`, {\n      method: \"DELETE\"\n    });\n    const newBooks = books.filter(el => el._id !== id);\n    setBooks(newBooks);\n  }\n\n  // This method will map out the records on the table\n  function bookList() {\n    return books.map(book => {\n      // const orderedBook = book.sort((a, b) => b.date - a.date);\n      // // book.sort(function(a,b) {\n      // //   orderedBook = new Date(b.date) - new Date(a.date);\n      // // })\n      // console.log(typeof(book))\n      // const orderedBook = [...book].sort((a, b) => a.date - a.date);\n      // // const orderedBook = [].concat(this.book.date)\n      // // .sort((a, b) => a.date > b.date ? 1 : -1)\n      // console.log(orderedBook)\n      return /*#__PURE__*/_jsxDEV(Book, {\n        book: book,\n        deleteBook: () => deleteBook(book._id)\n      }, book._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 8\n      }, this);\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" Total Books Read: \", bookList().length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Book List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: bookList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 4\n  }, this);\n}\n_s(BookList, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n_c2 = BookList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Book\");\n$RefreshReg$(_c2, \"BookList\");","map":{"version":3,"names":["React","useEffect","useState","Link","Book","props","book","title","author","date","genre","_id","deleteBook","BookList","books","setBooks","getBooks","response","fetch","ok","message","statusText","window","alert","json","console","log","orderedBook","sort","a","b","length","id","method","newBooks","filter","el","bookList","map","marginTop"],"sources":["D:/Users/VS-Work/mern/client/src/components/bookList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n \r\nconst Book = (props) => (\r\n <tr>\r\n   <td>{props.book.title}</td>\r\n   <td>{props.book.author}</td>\r\n   <td>{props.book.date}</td>\r\n   <td>{props.book.genre}</td>\r\n   <td>\r\n     <Link className=\"btn btn-link\" to={`/edit/${props.book._id}`}>Edit</Link> |\r\n     <button className=\"btn btn-link\"\r\n       onClick={() => {\r\n         props.deleteBook(props.book._id);\r\n       }}\r\n     >\r\n       Delete\r\n     </button>\r\n   </td>\r\n </tr>\r\n);\r\n \r\nexport default function BookList() {\r\n const [books, setBooks] = useState([]);\r\n \r\n // This method fetches the records from the database.\r\n useEffect(() => {\r\n   async function getBooks() {\r\n     const response = await fetch(`http://localhost:3000/book`);\r\n \r\n     if (!response.ok) {\r\n       const message = `An error occurred: ${response.statusText}`;\r\n       window.alert(message);\r\n       return;\r\n     }\r\n     \r\n \r\n     const books = await response.json();\r\n     console.log(books)\r\n     const orderedBook = [...books].sort((a, b) => a.title - a.date);\r\n     console.log(orderedBook)\r\n\r\n     setBooks(books);\r\n   }\r\n \r\n   getBooks();\r\n \r\n   return;\r\n }, [books.length]);\r\n \r\n // This method will delete a record\r\n async function deleteBook(id) {\r\n   await fetch(`http://localhost:3000/${id}`, {\r\n     method: \"DELETE\"\r\n   });\r\n \r\n   const newBooks = books.filter((el) => el._id !== id);\r\n   setBooks(newBooks);\r\n }\r\n \r\n // This method will map out the records on the table\r\n function bookList() {\r\n\r\n   return books.map((book) => {\r\n\r\n    // const orderedBook = book.sort((a, b) => b.date - a.date);\r\n    // // book.sort(function(a,b) {\r\n    // //   orderedBook = new Date(b.date) - new Date(a.date);\r\n    // // })\r\n    // console.log(typeof(book))\r\n    // const orderedBook = [...book].sort((a, b) => a.date - a.date);\r\n    // // const orderedBook = [].concat(this.book.date)\r\n    // // .sort((a, b) => a.date > b.date ? 1 : -1)\r\n    // console.log(orderedBook)\r\n     return (\r\n       <Book\r\n         book={book}\r\n         deleteBook={() => deleteBook(book._id)}\r\n         key={book._id}\r\n       />\r\n     );\r\n   });\r\n }\r\n \r\n // This following section will display the table with the records of individuals.\r\n return (\r\n   <div>\r\n     <h3> Total Books Read: {bookList().length}</h3>\r\n     <h3>Book List</h3>\r\n     <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n       <thead>\r\n         <tr>\r\n           <th>Title</th>\r\n           <th>Author</th>\r\n           <th>Date</th>\r\n           <th>Genre</th>\r\n           <th>Action</th>\r\n         </tr>\r\n       </thead>\r\n       <tbody>{bookList()}</tbody>\r\n     </table>\r\n   </div>\r\n );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}